name: CI

on: [ push ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly # strip (Cargo.toml) - stable
          components: clippy
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-stable-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  test:
    runs-on: ${{ format('{0}-latest', matrix.os) }}

    strategy:
      matrix:
        toolchain: [ nightly ] # strip (Cargo.toml) - stable
        os: [ ubuntu, windows, macos ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.toolchain }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  build:
    needs: [ lint, test ]
    runs-on: ${{ format('{0}-latest', matrix.os) }}

    strategy:
      matrix:
        os: [ ubuntu, windows, macos ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly # strip (Cargo.toml) - stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-stable-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ format('ghcr-cleaner-{0}', matrix.os) }}
          path: |
            target/release/ghcr-cleaner
            target/release/ghcr-cleaner.exe
